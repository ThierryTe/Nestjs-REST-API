var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.122,1,1.597]],["body/controllers/AppController.html",[0,1.639,1,2.332,2,1.258,3,0.745,4,0.745,5,0.614,6,2.187,7,0.614,8,1.947,9,3.356,10,1.791,11,0.065,12,1.258,13,2.789,14,1.495,15,1.163,16,0.971,17,0.893,18,2.165,19,2.789,20,0.745,21,0.291,22,2.187,23,1.791,24,1.495,25,2.789,26,0.037,27,0.049,28,0.037]],["title/modules/AppModule.html",[29,1.122,30,1.333]],["body/modules/AppModule.html",[2,1.121,3,0.664,4,0.664,5,0.547,11,0.066,16,1.019,17,0.795,20,0.664,21,0.259,26,0.033,27,0.045,28,0.033,29,1.721,30,2.36,31,0.945,32,1.121,33,1.595,34,1.595,35,1.121,36,2.16,37,1.595,38,1.948,39,1.948,40,1.986,41,2.16,42,1.595,43,1.595,44,2.485,45,2.638,46,2.485,47,1.948,48,1.121,49,2.485,50,2.485,51,2.638,52,2.485,53,2.485,54,2.485]],["title/injectables/AppService.html",[18,1.333,55,1.122]],["body/injectables/AppService.html",[3,0.796,4,0.796,5,0.656,7,0.656,8,2.032,9,3.441,11,0.064,12,1.345,14,1.597,15,1.214,16,0.796,17,0.954,18,2.032,20,0.796,21,0.311,24,1.597,26,0.04,27,0.051,28,0.04,55,1.71,56,1.914,57,2.338,58,2.981,59,2.981,60,2.981]],["title/interfaces/Job.html",[61,1.333,62,0.796]],["body/interfaces/Job.html",[3,0.724,4,0.724,5,0.597,7,0.597,11,0.063,15,1.445,16,0.724,20,0.724,26,0.036,27,0.048,28,0.036,61,1.452,62,1.141,63,2.71,64,2.125,65,3.565,66,3.984,67,2.796,68,2.289,69,2.718,70,2.718,71,2.718,72,1.797,73,2.558,74,1.452]],["title/classes/JobDTO.html",[21,0.259,75,1.122]],["body/classes/JobDTO.html",[3,0.604,4,0.604,5,0.498,7,0.498,10,2.024,11,0.064,12,1.422,15,1.162,16,0.604,20,0.604,21,0.236,23,2.747,26,0.03,27,0.042,28,0.03,62,1.257,67,2.473,70,2.652,71,2.024,72,1.772,73,2.522,75,1.422,76,2.261,77,1.773,78,3.153,79,3.08,80,3.928,81,3.928,82,3.08,83,3.153,84,2.261,85,3.153,86,2.261,87,3.631,88,1.212,89,2.261]],["title/controllers/JobsController.html",[0,1.122,90,1.333]],["body/controllers/JobsController.html",[0,0.488,2,0.488,3,0.289,4,0.289,5,0.238,7,0.238,8,0.96,10,1.897,11,0.065,12,1.333,14,1.584,15,1.171,16,0.79,17,0.346,20,0.289,21,0.113,22,0.849,23,0.695,24,1.707,26,0.036,27,0.024,28,0.015,62,1.171,68,1.712,69,2.045,72,1.203,75,1.591,88,0.58,90,0.96,91,0.849,92,1.082,93,2.667,94,1.792,95,1.792,96,1.405,97,2.667,98,1.792,99,1.082,100,1.082,101,2.294,102,2.667,103,1.082,104,3.771,105,3.771,106,1.082,107,2.091,108,2.091,109,2.766,110,1.082,111,1.082,112,2.294,113,1.792,114,1.082,115,0.849,116,1.082,117,1.792,118,1.792,119,1.082,120,1.082,121,1.082,122,1.792,123,2.955,124,1.792,125,1.792,126,1.082,127,1.082,128,1.082,129,1.082,130,2.294,131,2.294,132,1.082,133,1.792,134,1.082,135,1.082,136,1.082,137,1.082,138,1.792,139,1.082,140,1.082,141,1.082,142,1.082,143,1.082,144,0.849,145,0.849,146,0.682,147,0.849,148,1.082,149,1.082,150,1.082,151,1.082,152,1.082,153,1.082,154,1.082,155,1.082,156,2.667,157,2.955,158,1.082,159,1.792,160,2.667,161,1.082,162,1.082,163,1.082,164,1.082,165,2.667,166,1.082,167,1.082,168,1.082,169,1.082,170,1.792,171,0.96,172,1.792,173,1.792,174,1.792,175,1.792,176,1.082,177,1.082,178,1.082,179,1.082,180,1.082,181,1.082,182,1.082,183,1.082,184,1.082,185,1.082,186,1.082,187,1.082]],["title/modules/JobsModule.html",[29,1.122,40,1.122]],["body/modules/JobsModule.html",[2,1.476,3,0.637,4,0.637,5,0.525,11,0.066,16,1.125,17,0.763,20,0.637,21,0.249,26,0.032,27,0.044,28,0.032,29,1.685,31,0.908,32,1.076,33,1.531,34,1.531,35,1.076,36,2.398,37,1.531,40,1.962,41,2.101,42,1.531,43,1.531,45,1.871,47,1.871,48,1.076,62,0.763,90,2.001,146,1.655,147,1.871,188,1.871,189,1.871,190,2.385,191,2.385,192,2.101,193,2.385,194,2.385,195,2.385]],["title/injectables/JobsService.html",[55,1.122,146,0.946]],["body/injectables/JobsService.html",[3,0.404,4,0.404,5,0.333,7,0.333,8,1.255,11,0.065,12,1.668,14,1.873,15,1.31,16,0.934,17,0.483,20,0.404,21,0.157,24,1.873,26,0.02,27,0.031,28,0.02,48,0.681,51,1.184,55,1.056,56,0.97,62,1.119,68,2.245,69,2.074,72,1.577,74,0.809,75,1.668,96,1.836,107,2.741,108,2.741,109,3.281,115,1.836,144,1.184,145,1.184,146,0.891,171,0.809,196,1.184,197,4.477,198,2.868,199,2.341,200,3.23,201,2.341,202,1.51,203,1.51,204,3.23,205,1.51,206,2.341,207,1.51,208,1.51,209,2.341,210,1.51,211,1.51,212,1.51,213,2.341,214,1.51,215,1.51,216,1.51,217,1.51,218,3.23,219,1.51,220,1.51,221,1.51,222,1.51,223,1.51,224,1.51,225,1.51,226,1.51,227,1.51]],["title/coverage.html",[228,2.161]],["body/coverage.html",[0,1.573,1,1.683,5,0.577,6,2.055,11,0.064,18,1.404,21,0.273,26,0.035,27,0.047,28,0.035,35,1.182,55,1.573,57,2.055,61,1.404,62,0.839,64,2.055,72,1.182,75,1.182,77,2.055,90,1.404,91,2.055,146,0.997,171,1.404,192,1.683,196,2.055,228,1.683,229,2.621,230,2.621,231,2.621,232,4.636,233,3.487,234,2.621,235,2.621,236,2.621,237,2.055,238,2.621,239,3.487,240,2.621,241,2.055,242,2.621,243,2.621,244,2.621]],["title/dependencies.html",[32,1.346,245,2.09]],["body/dependencies.html",[11,0.066,17,0.858,21,0.369,26,0.036,27,0.047,28,0.036,32,1.209,48,1.209,74,1.436,88,1.436,246,3.962,247,2.68,248,2.68,249,2.68,250,2.775,251,2.68,252,2.101,253,2.101,254,2.68,255,2.101,256,2.68,257,2.101,258,2.68,259,2.101,260,2.68,261,2.68,262,2.101,263,2.68,264,2.68,265,2.68,266,2.68,267,2.68,268,2.68,269,2.68,270,2.68,271,2.101,272,2.101,273,2.68]],["title/miscellaneous/functions.html",[274,1.12,275,2.34]],["body/miscellaneous/functions.html",[7,0.789,11,0.057,26,0.048,27,0.057,28,0.048,35,2.041,237,2.811,274,1.921,275,2.811,276,3.585]],["title/index.html",[7,0.46,277,2.09,278,2.09]],["body/index.html",[11,0.065,21,0.319,26,0.029,27,0.041,28,0.029,31,0.825,48,0.978,74,1.162,79,1.701,88,1.162,228,1.392,250,1.701,252,1.701,253,1.701,255,1.701,257,1.701,259,1.701,262,1.701,271,1.701,272,1.701,279,2.169,280,4.701,281,4.068,282,4.068,283,2.169,284,2.169,285,3.062,286,2.169,287,2.169,288,2.169,289,2.169,290,2.169,291,2.169,292,2.169,293,2.169,294,4.222,295,2.169,296,2.169,297,3.062,298,2.169,299,2.169,300,2.169,301,2.169,302,3.062,303,3.062,304,2.169,305,2.169,306,2.169,307,2.169,308,2.169]],["title/modules.html",[31,1.281]],["body/modules.html",[11,0.056,26,0.047,27,0.056,28,0.047,30,1.879,31,1.334,40,1.582,309,4.191,310,4.191,311,4.191,312,4.191]],["title/overview.html",[313,2.64]],["body/overview.html",[2,1.304,11,0.058,21,0.301,26,0.039,27,0.05,28,0.039,29,1.304,30,2.325,31,1.1,32,1.304,33,1.856,34,1.856,35,1.304,36,1.856,37,1.856,38,2.267,39,2.267,40,2.025,41,2.387,42,1.856,43,1.856,56,1.856,61,1.549,146,1.564,188,2.267,189,2.267,313,2.267,314,4.11,315,3.718]],["title/miscellaneous/variables.html",[274,1.12,316,2.34]],["body/miscellaneous/variables.html",[7,0.74,11,0.061,15,1.075,26,0.045,27,0.055,28,0.045,70,2.156,71,2.156,73,2.156,82,2.633,171,1.8,192,2.622,241,2.633,274,1.8,316,2.633,317,3.358,318,3.358,319,3.358]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":315,"title":{},"body":{"overview.html":{}}}],["2",{"_index":314,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":83,"title":{},"body":{"classes/JobDTO.html":{}}}],["4.1.1",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["4.7.12",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["5.11.13",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["acc√®s",{"_index":104,"title":{},"body":{"controllers/JobsController.html":{}}}],["affichage",{"_index":117,"title":{},"body":{"controllers/JobsController.html":{}}}],["afficher",{"_index":153,"title":{},"body":{"controllers/JobsController.html":{}}}],["apicreatedresponse",{"_index":140,"title":{},"body":{"controllers/JobsController.html":{}}}],["apicreatedresponse({description",{"_index":177,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiforbiddenresponse",{"_index":141,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiforbiddenresponse({description",{"_index":157,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiokresponse",{"_index":142,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiokresponse({description",{"_index":156,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiproperty",{"_index":87,"title":{},"body":{"classes/JobDTO.html":{}}}],["apiproperty({type",{"_index":78,"title":{},"body":{"classes/JobDTO.html":{}}}],["apitags",{"_index":143,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('jobs",{"_index":148,"title":{},"body":{"controllers/JobsController.html":{}}}],["app",{"_index":292,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":197,"title":{},"body":{"injectables/JobsService.html":{}}}],["avec",{"_index":118,"title":{},"body":{"controllers/JobsController.html":{}}}],["await",{"_index":218,"title":{},"body":{"injectables/JobsService.html":{}}}],["body",{"_index":133,"title":{},"body":{"controllers/JobsController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":312,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":309,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":252,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["catch",{"_index":176,"title":{},"body":{"controllers/JobsController.html":{}}}],["class",{"_index":21,"title":{"classes/JobDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":76,"title":{},"body":{"classes/JobDTO.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":188,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":189,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":284,"title":{},"body":{"index.html":{}}}],["const",{"_index":222,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor",{"_index":202,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel('job",{"_index":216,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(jobmodel",{"_index":203,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/JobsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{},"coverage.html":{}}}],["controller('jobs",{"_index":149,"title":{},"body":{"controllers/JobsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["coverage",{"_index":228,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createjob",{"_index":198,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjob(job",{"_index":207,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjob(job:jobdto",{"_index":221,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjob.save",{"_index":224,"title":{},"body":{"injectables/JobsService.html":{}}}],["createjobs",{"_index":94,"title":{},"body":{"controllers/JobsController.html":{}}}],["createjobs(@body",{"_index":179,"title":{},"body":{"controllers/JobsController.html":{}}}],["createjobs(jobdto",{"_index":99,"title":{},"body":{"controllers/JobsController.html":{}}}],["cr√©ation",{"_index":101,"title":{},"body":{"controllers/JobsController.html":{}}}],["d",{"_index":283,"title":{},"body":{"index.html":{}}}],["d'un",{"_index":102,"title":{},"body":{"controllers/JobsController.html":{}}}],["d\\'un",{"_index":165,"title":{},"body":{"controllers/JobsController.html":{}}}],["de",{"_index":123,"title":{},"body":{"controllers/JobsController.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{}}}],["default",{"_index":82,"title":{},"body":{"classes/JobDTO.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["delete",{"_index":134,"title":{},"body":{"controllers/JobsController.html":{}}}],["delete(':id",{"_index":185,"title":{},"body":{"controllers/JobsController.html":{}}}],["delete(':id')@apiokresponse({description",{"_index":111,"title":{},"body":{"controllers/JobsController.html":{}}}],["deletejob",{"_index":199,"title":{},"body":{"injectables/JobsService.html":{}}}],["deletejob(id",{"_index":209,"title":{},"body":{"injectables/JobsService.html":{}}}],["deletejobs",{"_index":95,"title":{},"body":{"controllers/JobsController.html":{}}}],["deletejobs(@param('id",{"_index":186,"title":{},"body":{"controllers/JobsController.html":{}}}],["deletejobs(id",{"_index":110,"title":{},"body":{"controllers/JobsController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":79,"title":{},"body":{"classes/JobDTO.html":{},"index.html":{}}}],["development",{"_index":293,"title":{},"body":{"index.html":{}}}],["document",{"_index":66,"title":{},"body":{"interfaces/Job.html":{}}}],["documentation",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["du",{"_index":81,"title":{},"body":{"classes/JobDTO.html":{}}}],["e2e",{"_index":304,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["express",{"_index":250,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":65,"title":{},"body":{"interfaces/Job.html":{}}}],["false",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["findall",{"_index":200,"title":{},"body":{"injectables/JobsService.html":{}}}],["findbyid",{"_index":96,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["findbyid(@param('id",{"_index":167,"title":{},"body":{"controllers/JobsController.html":{}}}],["findbyid(id",{"_index":115,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["fonction",{"_index":160,"title":{},"body":{"controllers/JobsController.html":{}}}],["framework",{"_index":286,"title":{},"body":{"index.html":{}}}],["function",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":275,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":164,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":116,"title":{},"body":{"controllers/JobsController.html":{}}}],["get()@apiokresponse({description",{"_index":121,"title":{},"body":{"controllers/JobsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":277,"title":{"index.html":{}},"body":{}}],["graphique",{"_index":155,"title":{},"body":{"controllers/JobsController.html":{}}}],["hbs",{"_index":259,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["hello",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception",{"_index":135,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpexception('travail",{"_index":172,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpstatus",{"_index":136,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpstatus.not_found",{"_index":175,"title":{},"body":{"controllers/JobsController.html":{}}}],["id",{"_index":69,"title":{},"body":{"interfaces/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["identifier",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["if(result",{"_index":169,"title":{},"body":{"controllers/JobsController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/JobsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":215,"title":{},"body":{"injectables/JobsService.html":{}}}],["install",{"_index":281,"title":{},"body":{"index.html":{}}}],["installation",{"_index":290,"title":{},"body":{"index.html":{}}}],["installer",{"_index":279,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":291,"title":{},"body":{"index.html":{}}}],["interdit",{"_index":105,"title":{},"body":{"controllers/JobsController.html":{}}}],["interface",{"_index":61,"title":{"interfaces/Job.html":{}},"body":{"interfaces/Job.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":63,"title":{},"body":{"interfaces/Job.html":{}}}],["job",{"_index":62,"title":{"interfaces/Job.html":{}},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["job'})@apiforbiddenresponse({description",{"_index":113,"title":{},"body":{"controllers/JobsController.html":{}}}],["job,{new",{"_index":226,"title":{},"body":{"injectables/JobsService.html":{}}}],["job:jobdto",{"_index":183,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobdto",{"_index":75,"title":{"classes/JobDTO.html":{}},"body":{"classes/JobDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["jobmodel",{"_index":206,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobs",{"_index":93,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobs'})@apiforbiddenresponse({description",{"_index":126,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobs.controller",{"_index":191,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":147,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":192,"title":{},"body":{"modules/JobsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":90,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobservice",{"_index":150,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobsmodule",{"_index":40,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":146,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jour",{"_index":131,"title":{},"body":{"controllers/JobsController.html":{}}}],["l'interface",{"_index":154,"title":{},"body":{"controllers/JobsController.html":{}}}],["le",{"_index":80,"title":{},"body":{"classes/JobDTO.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["les",{"_index":125,"title":{},"body":{"controllers/JobsController.html":{}}}],["licensed",{"_index":308,"title":{},"body":{"index.html":{}}}],["liste",{"_index":122,"title":{},"body":{"controllers/JobsController.html":{}}}],["lister",{"_index":161,"title":{},"body":{"controllers/JobsController.html":{}}}],["manager",{"_index":253,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["miscellaneous",{"_index":274,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":130,"title":{},"body":{"controllers/JobsController.html":{}}}],["mit",{"_index":307,"title":{},"body":{"index.html":{}}}],["mode",{"_index":297,"title":{},"body":{"index.html":{}}}],["model",{"_index":204,"title":{},"body":{"injectables/JobsService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":74,"title":{},"body":{"interfaces/Job.html":{},"injectables/JobsService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":194,"title":{},"body":{"modules/JobsModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/jobs",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":108,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["nest",{"_index":285,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/platform",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":88,"title":{},"body":{"classes/JobDTO.html":{},"controllers/JobsController.html":{},"dependencies.html":{},"index.html":{}}}],["new",{"_index":171,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":173,"title":{},"body":{"controllers/JobsController.html":{}}}],["npm",{"_index":280,"title":{},"body":{"index.html":{}}}],["number",{"_index":73,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":68,"title":{},"body":{"interfaces/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["overview",{"_index":313,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":245,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":137,"title":{},"body":{"controllers/JobsController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["post",{"_index":138,"title":{},"body":{"controllers/JobsController.html":{}}}],["post()@apicreatedresponse({description",{"_index":100,"title":{},"body":{"controllers/JobsController.html":{}}}],["pour",{"_index":152,"title":{},"body":{"controllers/JobsController.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/JobsController.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/JobsService.html":{}}}],["production",{"_index":299,"title":{},"body":{"index.html":{}}}],["promise",{"_index":109,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["properties",{"_index":67,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["pug",{"_index":262,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["put",{"_index":139,"title":{},"body":{"controllers/JobsController.html":{}}}],["put(':id",{"_index":181,"title":{},"body":{"controllers/JobsController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":129,"title":{},"body":{"controllers/JobsController.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{}}}],["reflect",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["render('jobs/index",{"_index":151,"title":{},"body":{"controllers/JobsController.html":{}}}],["repository",{"_index":289,"title":{},"body":{"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["rimraf",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":97,"title":{},"body":{"controllers/JobsController.html":{}}}],["run",{"_index":294,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["r√©ussi",{"_index":178,"title":{},"body":{"controllers/JobsController.html":{}}}],["r√©ussi'})@apiforbiddenresponse({description",{"_index":103,"title":{},"body":{"controllers/JobsController.html":{}}}],["salaire",{"_index":70,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":282,"title":{},"body":{"index.html":{}}}],["schema",{"_index":195,"title":{},"body":{"modules/JobsModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["src/.../job.schema.ts",{"_index":317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["src/dtos/job.dto",{"_index":144,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["src/dtos/job.dto.ts",{"_index":77,"title":{},"body":{"classes/JobDTO.html":{},"coverage.html":{}}}],["src/dtos/job.dto.ts:10",{"_index":86,"title":{},"body":{"classes/JobDTO.html":{}}}],["src/dtos/job.dto.ts:16",{"_index":84,"title":{},"body":{"classes/JobDTO.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":91,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:16",{"_index":127,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:26",{"_index":120,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:43",{"_index":106,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:50",{"_index":132,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:57",{"_index":114,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":190,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":196,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":211,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":212,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":208,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:22",{"_index":214,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:25",{"_index":210,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:8",{"_index":205,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/main.ts",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/jobs.interfacte",{"_index":145,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["src/models/jobs.interfacte.ts",{"_index":64,"title":{},"body":{"interfaces/Job.html":{},"coverage.html":{}}}],["src/schemas/job.schema",{"_index":193,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/schemas/job.schema.ts",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":295,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":298,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":300,"title":{},"body":{"index.html":{}}}],["started",{"_index":278,"title":{"index.html":{}},"body":{}}],["starter",{"_index":288,"title":{},"body":{"index.html":{}}}],["statements",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"miscellaneous/variables.html":{}}}],["succ√®s",{"_index":166,"title":{},"body":{"controllers/JobsController.html":{}}}],["succ√®s'})@apiforbiddenresponse({description",{"_index":119,"title":{},"body":{"controllers/JobsController.html":{}}}],["support",{"_index":310,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":112,"title":{},"body":{"controllers/JobsController.html":{}}}],["svg",{"_index":311,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":271,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":303,"title":{},"body":{"index.html":{}}}],["test:covlicense",{"_index":306,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":305,"title":{},"body":{"index.html":{}}}],["tests",{"_index":302,"title":{},"body":{"index.html":{}}}],["then(result",{"_index":159,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.jobmodel(job",{"_index":223,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":219,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyidandremove(id",{"_index":227,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyidandupdate(id",{"_index":225,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone({_id",{"_index":220,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobservice.createjob(jobdto",{"_index":180,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobservice.deletejob(id",{"_index":187,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobservice.findall",{"_index":158,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobservice.findbyid(id",{"_index":168,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobservice.updatejob(id,job",{"_index":184,"title":{},"body":{"controllers/JobsController.html":{}}}],["throw",{"_index":170,"title":{},"body":{"controllers/JobsController.html":{}}}],["title",{"_index":71,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"miscellaneous/variables.html":{}}}],["title:string",{"_index":89,"title":{},"body":{"classes/JobDTO.html":{}}}],["titre",{"_index":85,"title":{},"body":{"classes/JobDTO.html":{}}}],["tous",{"_index":124,"title":{},"body":{"controllers/JobsController.html":{}}}],["transformer",{"_index":255,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["travail",{"_index":163,"title":{},"body":{"controllers/JobsController.html":{}}}],["trouv",{"_index":174,"title":{},"body":{"controllers/JobsController.html":{}}}],["true",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/JobsService.html":{}}}],["type",{"_index":72,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["typescript",{"_index":287,"title":{},"body":{"index.html":{}}}],["ui",{"_index":272,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["un",{"_index":162,"title":{},"body":{"controllers/JobsController.html":{}}}],["unit",{"_index":301,"title":{},"body":{"index.html":{}}}],["updatejob",{"_index":201,"title":{},"body":{"injectables/JobsService.html":{}}}],["updatejob(id",{"_index":213,"title":{},"body":{"injectables/JobsService.html":{}}}],["updatejobs",{"_index":98,"title":{},"body":{"controllers/JobsController.html":{}}}],["updatejobs(@param('id",{"_index":182,"title":{},"body":{"controllers/JobsController.html":{}}}],["updatejobs(id",{"_index":128,"title":{},"body":{"controllers/JobsController.html":{}}}],["usefindandmodify",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["useunifiedtopology",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":257,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["value",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":316,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":296,"title":{},"body":{"index.html":{}}}],["world",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n ¬†Declarations\n\n ¬†Module\n\n ¬†Bootstrap\n\n ¬†Providers\n\n ¬†Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            JobsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JobsModule } from './jobs/jobs.module';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    JobsModule,\n  MongooseModule.forRoot('mongodb://localhost:27017/jobs', {\n    useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false\n  })],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Job.html":{"url":"interfaces/Job.html","title":"interface - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/jobs.interfacte.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        salaire\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salaire\n                                    \n                                \n                                \n                                    \n                                        salaire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nexport interface Job extends Document{\nid?: string;\ntitle: string;\nsalaire: number; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobDTO.html":{"url":"classes/JobDTO.html","title":"class - JobDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/job.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                salaire\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            salaire\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'Le salaire du job', default: 3000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dtos/job.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Le titre du job', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dtos/job.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\n\nexport class JobDTO {\n    @ApiProperty({\n        type: String,\n        description: 'Le titre du job',\n        default: ''\n    })\n    readonly title:string;\n    @ApiProperty({\n        type: Number,\n        description: 'Le salaire du job',\n        default: 3000\n    })\n    readonly salaire: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJobs\n                            \n                            \n                                deleteJobs\n                            \n                            \n                                findById\n                            \n                            \n                                root\n                            \n                            \n                                updateJobs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJobs\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJobs(jobDto: JobDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'Cr√©ation d'un job r√©ussi'})@ApiForbiddenResponse({description: 'Acc√®s interdit'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobDto\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteJobs\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteJobs(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({description: 'Suppression d'un job'})@ApiForbiddenResponse({description: 'Acc√®s interdit'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Affichage d'un job avec succ√®s'})@ApiForbiddenResponse({description: 'Acc√®s interdit'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste de tous les jobs'})@ApiForbiddenResponse({description: 'Acc√®s interdit'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateJobs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateJobs(id: string, job: JobDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'Mise √† jour d'un job'})@ApiForbiddenResponse({description: 'Acc√®s interdit'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put } from '@nestjs/common';\nimport { ApiCreatedResponse, ApiForbiddenResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { JobDTO } from 'src/dtos/job.dto';\nimport { Job } from 'src/models/jobs.interfacte';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n    constructor(private readonly jobService: JobsService){}\n    \n    @Get()\n    // @Render('jobs/index') pour afficher l'interface graphique\n    @ApiOkResponse({description: 'Liste de tous les jobs'})\n    @ApiForbiddenResponse({description: 'Acc√®s interdit'})\n     root(){\n        return this.jobService.findAll()\n        .then(result =>result ?{\n         jobs: result\n        }: {jobs: []});\n     }\n    //Fonction lister un travail\n    @Get(':id')\n    @ApiOkResponse({description: 'Affichage d\\'un job avec succ√®s'})\n    @ApiForbiddenResponse({description: 'Acc√®s interdit'})\n    findById(@Param('id') id: string): Promise{\n        return this.jobService.findById(id)\n        .then(result =>{\n            if(result){\n                return result;\n            }else {\n                throw new HttpException('Travail non trouv√©', HttpStatus.NOT_FOUND);\n            }\n        })\n        .catch(() =>{\n            throw new HttpException('Travail non trouv√©', HttpStatus.NOT_FOUND);\n        });\n    }\n  //Fonction de cr√©ation\n    @Post()\n    @ApiCreatedResponse({description: 'Cr√©ation d\\'un job r√©ussi'})\n    @ApiForbiddenResponse({description: 'Acc√®s interdit'})\n    createJobs(@Body() jobDto: JobDTO): Promise {\n        return this.jobService.createJob(jobDto);\n    }\n    //fonction de mise √† jour\n    @Put(':id')\n    @ApiOkResponse({description: 'Mise √† jour d\\'un job'})\n    @ApiForbiddenResponse({description: 'Acc√®s interdit'})\n    updateJobs(@Param('id') id: string , @Body() job:JobDTO): Promise {\n        return this.jobService.updateJob(id,job);\n    }\n    //fonction de suppression\n    @Delete(':id')\n    @ApiOkResponse({description: 'Suppression d\\'un job'})\n    @ApiForbiddenResponse({description: 'Acc√®s interdit'})\n    deleteJobs(@Param('id') id: string ): Promise {\n        return this.jobService.deleteJob(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n ¬†Declarations\n\n ¬†Module\n\n ¬†Bootstrap\n\n ¬†Providers\n\n ¬†Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {  Module } from '@nestjs/common';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JobSchema } from 'src/schemas/job.schema';\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Job', schema: JobSchema}])\n],\n    controllers: [ JobsController],\n    providers: [ JobsService],\n})\nexport class JobsModule {\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createJob\n                            \n                            \n                                    Async\n                                deleteJob\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                updateJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createJob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createJob(job: JobDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteJob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteJob(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateJob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateJob(id: String, job: JobDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { JobDTO } from 'src/dtos/job.dto';\nimport { Job } from 'src/models/jobs.interfacte';\n\n@Injectable()\nexport class JobsService { \n    constructor(@InjectModel('Job')  private jobModel: Model){}\n\n    async findAll(): Promise{\n        return await this.jobModel.find({});\n    }\n\n    async findById(id: String): Promise{\n         return await this.jobModel.findOne({_id: id});\n    }\n    async createJob(job:JobDTO): Promise{\n        const createJob = new this.jobModel(job);\n        return await createJob.save();\n    }\n    async updateJob(id: String, job: JobDTO): Promise {\n        return this.jobModel.findByIdAndUpdate(id, job,{new: true} );\n    }\n    async deleteJob(id: String): Promise{\n        return await this.jobModel.findByIdAndRemove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dtos/job.dto.ts\n            \n            class\n            JobDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/jobs.interfacte.ts\n            \n            interface\n            Job\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mongoose : ^7.2.2\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.12\n        \n            cache-manager : ^3.4.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            hbs : ^4.1.1\n        \n            mongoose : ^5.11.13\n        \n            pug : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap¬†¬†¬†(src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nModules √† installer\n$ npm install --save @nestjs/mongoose mongoose\n$npm install --save class-transformer class-validator\n$ npm install --save cache-manager\n$ npm install --save pug hbs\n$ npm install --save @nestjs/swagger swagger-ui-express\n$ npm i -D @compodoc/compodoc\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n ¬†Declarations\n\n ¬†Module\n\n ¬†Bootstrap\n\n ¬†Providers\n\n ¬†Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JobSchema¬†¬†¬†(src/.../job.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/job.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JobSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n   title: String,\n   salaire: Number\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
